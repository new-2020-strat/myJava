<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<!--mybatis的主配置文件-->
<configuration>
    <!-- 数据连接信息可在properties中定义，在DataSource中引用
       也可在外部文件信息中引用，则用resource属性指定外部文件路径
       路径是按类路径规则写法切并且必须存在于类路径下
       也可以用url属性通过file协议引入
    配置外部属性文件(数据库连接信息)-->
    <properties resource="jdbc.properties"/>

    <!-- typeAliases标签配置别名-->
    <typeAliases>
        <!--typeAlias用于配置别名，type属性指定的实体类全限定类名,alias属性指定别名，当指定别名不区分大小写-->
        <!-- <typeAlias type="com.mybatis.entity.User" alias="user"></typeAlias>-->
        <!--用于指定配置别名的包，当指定后，该包下的所有实体类都会注册别名，并且类名就是别名，不再区分大小写
        使用该标签后可在dao配置文件中用resultMap标签自定义配置结果集和实体类
        <package name="com.crud.config.entity"></package>
        -->
    </typeAliases>
    <!-- 环境配置-->
    <environments default="mysql">
        <!--配置mysql环境 -->
        <environment id="mysql">
            <!--配置事物的类型-->
            <transactionManager type="jdbc"></transactionManager>
            <!--配置数据源(连接池)-->
            <dataSource type="POOLED">
                <!--连接数据库的4个基本信息-->
                <property name="driver" value="${jdbc.driver}"/>
                <!--
                    url: Uniform Resource Locator,统一资源定位符，可以唯一标识的一个资源位置
                    比如：http//192.168.206.128:3306/mydatabase"
                          协议        主机      端口    uri
                     uri：Uniform Resource Identifier ,统一资源标识符，在应用唯一定位一个资源
                -->
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>
    <!--指定映射配置文件位置 映射配置文件即是建立每个dao独立的配置文件映射配置信息：-->
    <mappers>
        <!--<mapper resource="com/crud/dao/IUser.xml"/>-->
        <package name="com.crud.config.dao"/>
    </mappers>
</configuration>